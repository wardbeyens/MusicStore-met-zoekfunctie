@model MusicStore.Models.ViewModels.IndexAlbumsViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<hr />

<h2>Filter op:</h2>

<form asp-action="Index" method="get">

    <div>
        <label asp-for="genreId">@Html.DisplayNameFor(model => model.Genres)</label>

        <select asp-for="genreId" asp-items="Model.Genres">
            <option value="0">-- Select a genre --</option>
        </select>
    </div>


    <div>
        <label asp-for="artistId">@Html.DisplayNameFor(model => model.Artists)</label>

        <select asp-for="artistId" asp-items="Model.Artists">
            <option value="0">-- Select an artist --</option>
        </select>
    </div>

    <div>
        <label asp-for="searchString">@Html.DisplayNameFor(model => model.Albums[0].Title)</label>

        <input type="text" asp-for="searchString" />
    </div>


    <input type="submit" value="Filter" />
</form>


<hr />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Albums[0].Artist)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Albums[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Albums[0].Title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Albums) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Artist.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.AlbumID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.AlbumID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.AlbumID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
